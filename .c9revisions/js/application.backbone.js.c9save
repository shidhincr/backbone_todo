{"ts":1347526776803,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/**\r\n * App View is the skeleton of our code which controlls all the sub views\r\n * By default the App View events are attached to the body\r\n * This can be easily changed by overriding the 'el' property of the view.\r\n */\r\n(function($){\r\n    window.AppView = Backbone.View.extend({\r\n\r\n        el : \"body\"\r\n        /*\r\n         * Created two 'DIV' for holding the important tasks and normal tasks\r\n         * Caching the jQuery objects to the view so that we can use them later.\r\n         */\r\n        ,initialize : function( options ) {\r\n            this.textinput =  $(\"#taskText\");\r\n            this.main = $(\"#main\");\r\n            this.impomain = $(\"#priority\");\r\n\r\n            /**\r\n             * Listens to any changes in the global Tasks collection\r\n             * TODO :  make it more modular and remove the dependency from here\r\n             * Namespace the view \r\n             */\r\n\r\n            Tasks.on(\"add\",this.addSingleTask , this);\r\n            Tasks.on(\"change:important\",this.changePosition , this);\r\n\r\n            /**\r\n             * Calls the collections Fetch method to load all the tasks\r\n             * finally - render the Main View\r\n             */\r\n\r\n            Tasks.fetch();\r\n            this.render();\r\n        }\r\n        ,render : function(){\r\n            this.showAll();\r\n        }\r\n        ,events : {\r\n            \"click #addTask\" : \"addTask\"\r\n            ,\"keyup #taskText\": \"keyEnter\"\r\n        }\r\n        ,keyEnter: function(e){\r\n            if(e.keyCode === 13){\r\n                this.addTask();\r\n            }\r\n        }\r\n        ,addTask : function(){\r\n\r\n            /**\r\n             * Get the value from the text box and creates a task.\r\n             * Do the basic validations before creating the task - which can be done in task level also\r\n             * but i preferred it to be done here first.\r\n             */\r\n            var taskdesc = this.textinput.val();\r\n            this.textinput.removeClass(\"error\");\r\n\r\n            if( $.trim( taskdesc ) === \"\") {\r\n                this.textinput.addClass(\"error\").val(\"\");\r\n                return;\r\n            }\r\n            /**\r\n             * This is the easiest way of creating a new task - as our collection\r\n             * knows the structure of the model.\r\n             */\r\n            Tasks.create({\r\n                text : taskdesc\r\n            });\r\n\r\n            this.textinput.val(\"\").focus();\r\n\r\n        }\r\n        ,showAll : function(){\r\n            this.clearView();\r\n            Tasks.each( this.addSingleTask ,this);\r\n        }\r\n        ,showCompleted : function(){\r\n            this.clearView();\r\n            _.each(Tasks.completed(), this.addSingleTask ,this )\r\n        }\r\n        ,showImportant : function(){\r\n            this.clearView();\r\n            _.each(Tasks.important(), this.addSingleTask ,this )   \r\n        }\r\n        /**\r\n         * Adds a single View - by calling the TaskView \r\n         * @param  task [ raw JSON representation of the data]\r\n         */\r\n        ,addSingleTask : function( task ) {\r\n            var tview = new TaskView({\r\n                model: task\r\n            });\r\n            task.view = tview;\r\n            if(task.get(\"important\")){\r\n                tview.$el.appendTo( this.impomain ).fadeIn();\r\n            }else{\r\n                tview.$el.appendTo( this.main  ).fadeIn();\r\n            }\r\n        }\r\n        /**\r\n         * Check for the taks type , if its important then push it to the important DIV , else to the normal\r\n         * @param  {Task} task [currespoing task object]\r\n         * @return void\r\n         */\r\n        ,changePosition : function( task ){\r\n            ( task.get(\"important\") ) ? this.impomain.append( task.view.el ) : this.main.append( task.view.el );\r\n        }\r\n        /**\r\n         * Clear the view only ( no changes in the model )\r\n         * @return void\r\n         */\r\n        ,clearView : function(){\r\n            this.main.html(\"\");\r\n            this.impomain.html(\"\");\r\n        } \r\n\r\n    });\r\n\r\n}(jQuery));\r\n\r\n/**\r\n * Different routers for showing different views in the page\r\n * Yet to be impletemented completely.\r\n * But the method names describes them very well, i guess.\r\n */\r\n\r\nvar AppRouter = Backbone.Router.extend({\r\n    routes: {\r\n        \"\" :\"showAll\"\r\n        ,\"completed\": \"showCompleted\"\r\n        ,\"important\":\"showImportant\"\r\n    }\r\n    ,initialize : function(op){\r\n        this.view = op.view;\r\n    }\r\n    ,showCompleted : function(){\r\n        this.view.showCompleted();\r\n    }\r\n    ,showImportant : function(){\r\n        this.view.showImportant()\r\n    }\r\n    ,showAll : function(){\r\n        this.view.showAll();\r\n    }\r\n});\r\n\r\n\r\n/**\r\n * The final code : \r\n * Initialise all the views and router when the DOM is ready.\r\n * TODO :  the routers are functional now , add the curresponding buttons to use them.\r\n */\r\n\r\njQuery(function(){\r\n    window.myTodoApp = new AppView;\r\n    window.myTodoRouter = new AppRouter({view : myTodoApp});\r\n    Backbone.history.start();\r\n});\r\n"]],"start1":0,"start2":0,"length1":0,"length2":4967}]],"length":4967}
{"contributors":[],"silentsave":true,"ts":1348827450612,"patch":[[{"diffs":[[0,"   \r\n        }\r\n"],[1,"        ,\r\n"],[0,"        /**\r\n   "]],"start1":2812,"start2":2812,"length1":32,"length2":43}]],"length":4978,"saved":false}
{"ts":1348827452375,"patch":[[{"diffs":[[0,"       ,"],[1,"showI"],[0,"\r\n      "]],"start1":2829,"start2":2829,"length1":16,"length2":21}]],"length":4983,"saved":false}
{"ts":1348827453707,"patch":[[{"diffs":[[0,"  ,showI"],[1,"mportant"],[0,"\r\n      "]],"start1":2834,"start2":2834,"length1":16,"length2":24}]],"length":4991,"saved":false}
{"ts":1348827454550,"patch":[[{"diffs":[[0,"mportant"],[1," "],[0,"\r\n      "]],"start1":2842,"start2":2842,"length1":16,"length2":17}]],"length":4992,"saved":false}
{"ts":1348827455887,"patch":[[{"diffs":[[0,"portant "],[1,": "],[0,"\r\n      "]],"start1":2843,"start2":2843,"length1":16,"length2":18}]],"length":4994,"saved":false}
{"ts":1348827458159,"patch":[[{"diffs":[[0,"rtant : "],[1,"function"],[0,"\r\n      "]],"start1":2845,"start2":2845,"length1":16,"length2":24}]],"length":5002,"saved":false}
{"ts":1348827460180,"patch":[[{"diffs":[[0,"t : function"],[1,"(){"],[0,"\r\n        /*"]],"start1":2849,"start2":2849,"length1":24,"length2":27}]],"length":5005,"saved":false}
{"ts":1348827461155,"patch":[[{"diffs":[[0," : function(){\r\n"],[1,"            \r\n"],[0,"        /**\r\n   "]],"start1":2850,"start2":2850,"length1":32,"length2":46}]],"length":5019,"saved":false}
{"ts":1348827466571,"patch":[[{"diffs":[[0,"        "],[1,"this"],[0,"\r\n      "]],"start1":2870,"start2":2870,"length1":16,"length2":20}]],"length":5023,"saved":false}
{"ts":1348827467300,"patch":[[{"diffs":[[0,"    this"],[1,".e"],[0,"\r\n      "]],"start1":2874,"start2":2874,"length1":16,"length2":18}]],"length":5025,"saved":false}
{"ts":1348827468494,"patch":[[{"diffs":[[0,"   this."],[-1,"e"],[1,"clea"],[0,"\r\n      "]],"start1":2875,"start2":2875,"length1":17,"length2":20}]],"length":5028,"saved":false}
{"ts":1348827469649,"patch":[[{"diffs":[[0,"his.clea"],[1,"rView()"],[0,"\r\n      "]],"start1":2879,"start2":2879,"length1":16,"length2":23}]],"length":5035,"saved":false}
{"ts":1348827471936,"patch":[[{"diffs":[[0,"arView()"],[1,";\r\n            "],[0,"\r\n      "]],"start1":2886,"start2":2886,"length1":16,"length2":31}]],"length":5050,"saved":false}
{"ts":1348827482464,"patch":[[{"diffs":[[0,"        "],[1,"_.each(Tasks.important(), this.addSingleTask ,this )  "],[0,"\r\n      "]],"start1":2901,"start2":2901,"length1":16,"length2":70}]],"length":5104,"saved":false}
{"ts":1348827488107,"patch":[[{"diffs":[[0,",this ) "],[-1,"  "],[0,"\r\n      "]],"start1":2805,"start2":2805,"length1":18,"length2":16}]],"length":5102,"saved":false}
{"ts":1348827488999,"patch":[[{"diffs":[[0," ,this )"],[1,";"],[0," \r\n     "]],"start1":2804,"start2":2804,"length1":16,"length2":17}]],"length":5103,"saved":false}
{"ts":1348827492615,"patch":[[{"diffs":[[0," ,this )"],[1,";"],[0,"\r\n      "]],"start1":2658,"start2":2658,"length1":16,"length2":17}]],"length":5104,"saved":false}
{"ts":1348827495278,"patch":[[{"diffs":[[0," ,this )"],[1,";\r\n          "],[0,"  \r\n    "]],"start1":2953,"start2":2953,"length1":16,"length2":29}]],"length":5117,"saved":false}
{"ts":1348827496202,"patch":[[{"diffs":[[0,"        "],[-1,"    "],[1,"}"],[0,"\r\n      "]],"start1":2964,"start2":2964,"length1":20,"length2":17}]],"length":5114,"saved":false}
{"ts":1348827502283,"patch":[[{"diffs":[[0,".each(Tasks."],[-1,"important"],[1,"pending"],[0,"(), this.add"]],"start1":2910,"start2":2910,"length1":33,"length2":31}]],"length":5112,"saved":false}
{"ts":1348827519350,"patch":[[{"diffs":[[0,"rtant()\r\n    }\r\n"],[1,"    ,show\r\n"],[0,"    ,showAll : f"]],"start1":4682,"start2":4682,"length1":32,"length2":43}]],"length":5123,"saved":false}
{"ts":1348827522426,"patch":[[{"diffs":[[0,"   ,show"],[1,"Pending "],[0,"\r\n    ,s"]],"start1":4699,"start2":4699,"length1":16,"length2":24}]],"length":5131,"saved":false}
{"ts":1348827523451,"patch":[[{"diffs":[[0,"Pending "],[1,": fu"],[0,"\r\n    ,s"]],"start1":4707,"start2":4707,"length1":16,"length2":20}]],"length":5135,"saved":false}
{"ts":1348827525485,"patch":[[{"diffs":[[0,"ing : fu"],[1,"nction()"],[0,"\r\n    ,s"]],"start1":4711,"start2":4711,"length1":16,"length2":24}]],"length":5143,"saved":false}
{"ts":1348827527455,"patch":[[{"diffs":[[0,"nction()"],[1,"{\r\n        "],[0,"\r\n    ,s"]],"start1":4719,"start2":4719,"length1":16,"length2":27}]],"length":5154,"saved":false}
{"ts":1348827529771,"patch":[[{"diffs":[[0,"){\r\n    "],[1,"\r\n"],[0,"    "],[1,"}"],[0,"\r\n    ,s"]],"start1":4726,"start2":4726,"length1":20,"length2":23}]],"length":5157,"saved":false}
{"ts":1348827531358,"patch":[[{"diffs":[[0,"){\r\n    "],[1,"    "],[0,"\r\n    }\r"]],"start1":4726,"start2":4726,"length1":16,"length2":20}]],"length":5161,"saved":false}
{"ts":1348827534503,"patch":[[{"diffs":[[0,"        "],[1,"this.v"],[0,"\r\n    }\r"]],"start1":4730,"start2":4730,"length1":16,"length2":22}]],"length":5167,"saved":false}
{"ts":1348827535574,"patch":[[{"diffs":[[0,"  this.v"],[1,"iew"],[0,"\r\n    }\r"]],"start1":4736,"start2":4736,"length1":16,"length2":19}]],"length":5170,"saved":false}
{"ts":1348827536805,"patch":[[{"diffs":[[0,"his.view"],[1,"."],[0,"\r\n    }\r"]],"start1":4739,"start2":4739,"length1":16,"length2":17}]],"length":5171,"saved":false}
{"ts":1348827543480,"patch":[[{"diffs":[[0,"is.view."],[1,"showPending()"],[0,"\r\n    }\r"]],"start1":4740,"start2":4740,"length1":16,"length2":29}]],"length":5184,"saved":false}
{"ts":1348827544637,"patch":[[{"diffs":[[0,"ending()"],[1,";"],[0,"\r\n    }\r"]],"start1":4753,"start2":4753,"length1":16,"length2":17}]],"length":5185,"saved":false}
{"ts":1348827551787,"patch":[[{"diffs":[[0,"rtant\"\r\n"],[1,"        ,\r\n"],[0,"    }\r\n "]],"start1":4460,"start2":4460,"length1":16,"length2":27}]],"length":5196,"saved":false}
{"ts":1348827555217,"patch":[[{"diffs":[[0,"       ,"],[1,"\"p"],[0,"\r\n    }\r"]],"start1":4469,"start2":4469,"length1":16,"length2":18}]],"length":5198,"saved":false}
{"ts":1348827556186,"patch":[[{"diffs":[[0,"     ,\"p"],[1,"ending"],[0,"\r\n    }\r"]],"start1":4471,"start2":4471,"length1":16,"length2":22}]],"length":5204,"saved":false}
{"ts":1348827558992,"patch":[[{"diffs":[[0,"\"pending"],[1,"\" :"],[0,"\r\n    }\r"]],"start1":4477,"start2":4477,"length1":16,"length2":19}]],"length":5207,"saved":false}
{"ts":1348827559699,"patch":[[{"diffs":[[0,"nding\" :"],[1," \""],[0,"\r\n    }\r"]],"start1":4480,"start2":4480,"length1":16,"length2":18}]],"length":5209,"saved":false}
{"ts":1348827561625,"patch":[[{"diffs":[[0,"ing\" : \""],[1,"showPe"],[0,"\r\n    }\r"]],"start1":4482,"start2":4482,"length1":16,"length2":22}]],"length":5215,"saved":false}
{"ts":1348827563357,"patch":[[{"diffs":[[0," \"showPe"],[1,"nding\""],[0,"\r\n    }\r"]],"start1":4488,"start2":4488,"length1":16,"length2":22}]],"length":5221,"saved":false}
{"ts":1348827606801,"patch":[[{"diffs":[[0,"       ,show"],[-1,"Important"],[1,"Pending"],[0," : function("]],"start1":2829,"start2":2829,"length1":33,"length2":31}]],"length":5219,"saved":false}
